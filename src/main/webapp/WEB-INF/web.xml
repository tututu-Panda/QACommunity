<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <error-page>
        <error-code>404</error-code>
        <location>/admin/common/404error.jsp</location>
    </error-page>
    <!--自定义的判断后台用户是否登录的过滤器-->
    <filter>
        <filter-name>QaUserFilter</filter-name>

        <filter-class>com.qa.filter.QaUserFilter</filter-class>
        <init-param>
            <!--排除过滤的路径url-->
            <param-name>excludedPages</param-name>
            <param-value>/admin/login.jsp,/admin/qaBackUser_baLogin.action</param-value>
        </init-param>
    </filter>
    <!--判断后台用户是否登录，admin/下的操作-->
    <filter-mapping>
        <filter-name>QaUserFilter</filter-name>
        <url-pattern>/admin/*</url-pattern>
    </filter-mapping>

    <!--判断前台的用户是否登录，针对部分功能-->
    <filter>
        <filter-name>FrontUserFilter</filter-name>
        <filter-class>com.qa.filter.FrontUserFilter</filter-class>
        <init-param>
            <!--排除过滤的路径url-->
            <param-name>excludedPages</param-name>
            <param-value>/front/user/login.jsp,/front/user/register.jsp,/frontUser/FrontUser_checkAccount.action,/frontUser/FrontUser_checkLogin.action,/frontUser/FrontUser_UserLogin.action,/frontUser/FrontUser_registerUser.action,/frontUser/FrontUser_addUser.action</param-value>
        </init-param>
    </filter>
    <!--过滤路径 , /frontUser/下的所有操作-->
    <filter-mapping>
        <filter-name>FrontUserFilter</filter-name>
        <url-pattern>/frontUser/*</url-pattern>
    </filter-mapping>

    <!--判断是否访问的文章详情-->
    <filter>
        <filter-name>userLogFilter</filter-name>
        <filter-class>com.qa.filter.userLogFilter</filter-class>
    </filter>
    <!--过滤路径 , /front/下的所有操作-->
    <filter-mapping>
        <filter-name>userLogFilter</filter-name>
        <url-pattern>/front/frontIndex_getTheQuestion</url-pattern>
    </filter-mapping>

    <!-- struts2容器控制器 -->
    <filter>
        <filter-name>struts2</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>



    <!-- spring容器配置 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

    <!-- spring容器监听器 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>


    <!-- 欢迎页面 -->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

</web-app>