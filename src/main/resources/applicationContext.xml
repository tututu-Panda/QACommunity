<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- classpath 是指什么呢 -->
    <context:property-placeholder location="classpath:db.properties" />

    <!-- 使用annotation -->
    <context:annotation-config/>
    <!-- 使用annotation自动注册bean,并检查@Controller, @Service, @Repository注解已被注入 -->
    <context:component-scan base-package="com.qa.action"/>
    <context:component-scan base-package="com.qa.service"/>
    <context:component-scan base-package="com.qa.dao" />

    <!--aop切面-->
    <aop:aspectj-autoproxy/>
    <bean id="log" class="com.qa.aop.SystemLogAspect"/>

    <!-- data connection setting -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${database.driverClassName}"></property>
        <property name="jdbcUrl" value="${database.url}"></property>
        <property name="user" value="${database.username}"></property>
        <property name="password" value="${database.password}"></property>
        <!-- 设置数据库连接池的最大连接数 -->
        <property name="maxPoolSize">
            <value>50</value>
        </property>
        <!-- 设置数据库连接池的最小连接数 -->
        <property name="minPoolSize">
            <value>5</value>
        </property>
        <!-- 设置数据库连接池的初始化连接数 -->
        <property name="initialPoolSize">
            <value>5</value>
        </property>
        <!-- 设置数据库连接池的连接最大空闲时间 -->
        <property name="maxIdleTime">
            <value>20</value>
        </property>
        <!-- c3p0缓存Statement的数量数 -->
        <property name="maxStatements">
            <value>50</value>
        </property>
        <!-- 当连接池里面的连接用完的时候,C3P0一下获取新的连接数 -->
        <property name="acquireIncrement">
            <value>20</value>
        </property>

    </bean>

    <!-- hibernate 管理-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <!-- 引用上面设置的数据源 -->
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.autoReconnect">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <!-- 解决session关闭问题 -->
                <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
                <prop key="current_session_context_class">thread</prop>

                <prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/qacommunity</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
            </props>

        </property>

        <!-- 包扫描的方式加载注解类 -->
        <property name="packagesToScan">
            <list>
                <value>com.qa.entity</value>
            </list>
        </property>
    </bean>

    <!-- 加载redis配置文件 -->
    <context:property-placeholder location="classpath:redis.properties" />
    <bean id="jedisPoolConfig1" class="redis.clients.jedis.JedisPoolConfig">
    </bean>

    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
        <property name="hostName" value="127.0.0.1"/>
        <property name="port" value="6379"/>
        <property name="password" value="123456"/>
        <property name="timeout" value="5000"/>
        <property name="usePool" value="true"/>
        <property name="poolConfig" ref="jedisPoolConfig1"/>
    </bean>

    <bean id="jedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer">
            <bean
                    class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean
                    class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
    </bean>
    <!-- ################RedisTemplate操作模板配置end##################### -->

    <!-- ################JedisPool操作配置begin ##############################-->
    <!-- Redis连接池的配置 -->
    <bean id="jedisPoolConfig2" class="redis.clients.jedis.JedisPoolConfig" >
        <property name="maxTotal" value="200"/> <!-- 控制一个pool可分配多少个jedis实例 -->
        <property name="maxIdle" value="50"/> <!-- 控制一个pool最多有多少个状态为idle(空闲)的jedis实例 -->
        <property name="minIdle" value="20"/> <!-- 控制一个pool最少有多少个状态为idle(空闲)的jedis实例 -->
        <property name="maxWaitMillis" value="300"/><!-- 表示当borrow一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException -->
        <property name="testOnBorrow" value="true"/><!-- 在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的 -->
        <property name="testOnReturn" value="true"/>
    </bean>
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig2"/>
        <constructor-arg index="1" value="127.0.0.1" />
        <constructor-arg index="2" value="6379" />
        <constructor-arg index="3" value="5000" />
        <!--Redis密码-->
        <constructor-arg index="4" value="123456" />
    </bean>
    <!-- ################JedisPool操作配置end ################################-->

    <!-- 用注解来实现事物管理 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
</beans>